import numpy as np
import pandas as pd
from datetime import datetime, date
import argparse


def fourier_sequence(length, t=1):
    return np.array([np.power(np.e, 2 * np.pi * 1j * (i / length) * t) for i in range(length)])


def fourier_matrix(n, d, dates=None):
    """Generates a matrix with n copies of a length d fourier sequence"""
    if dates is not None:
        return np.stack([fourier_sequence(d, dates[i]) for i in range(n)])
    return np.stack([fourier_sequence(d) for _ in range(n)])


def main(raw_data_path, save_path, d=5000):
    """Generate fourier data based on raw data"""
    raw_data = pd.read_csv(raw_data_path)
    raw_data.set_index('time', inplace=True)

    # create features using days as the timescale!
    dates = [datetime.strptime(time.split(' ')[0], '%Y-%m-%d') for time in raw_data.index.values]
    dates = [(d0.date() - date(d0.year, 1, 1)).days for d0 in dates]
    n = len(raw_data)
    mat = fourier_matrix(n, d, dates)
    np.save(save_path, mat)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Create fourier feature matrix')

    parser.add_argument('raw_data_path', type=str, help='Location of raw data (.csv) generated by other script')
    parser.add_argument('save_path', type=str, help='Location to save fourier feature matrix')
    parser.add_argument('dimension', type=int, help='dimensionality of fourier features (feature length)')

    args = parser.parse_args()

    main(args.raw_data_path, args.save_path, args.dimension)
